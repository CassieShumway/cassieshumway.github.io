<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog Name</title>
  <subtitle>Blog subtitle</subtitle>
  <id>http://blog.url.com/</id>
  <link href="http://blog.url.com/"/>
  <link href="http://blog.url.com/feed.xml" rel="self"/>
  <updated>2014-06-17T05:00:00Z</updated>
  <author>
    <name>Blog Author</name>
  </author>
  <entry>
    <title>Jekyll</title>
    <link rel="alternate" href="http://blog.url.com/2014/06/17/jekyll.html"/>
    <id>http://blog.url.com/2014/06/17/jekyll.html</id>
    <published>2014-06-17T05:00:00Z</published>
    <updated>2014-06-24T17:36:53-05:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;article&gt;

&lt;h1&gt;Let's Troubleshoot Jekyll&lt;/h1&gt;

&lt;p&gt;This week I had to set up a new environment using Jekyll. I've always heard good things about Jekyll and was looking forward to seeing how it worked. The catch of course, was to get everything set-up first. 

&lt;p&gt;In terms of public use, it's pretty easy to install and they have great online resources. The website for &lt;a class="underline" href="http://jekyllrb.com/"&gt;Jekyll&lt;/a&gt; is easy to navigate through and user friendly. However, I did run into a few errors.&lt;/p&gt; 

&lt;hr class="divider-short" /&gt;

&lt;h3&gt;Setting Up&lt;/h3&gt;

&lt;p&gt; To install Jekyll on your computer, type this command in your terminal:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;gem install jekyll&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Terminal will automatically start downloading Jekyll, but unfortunately, there were some issues that disabled Jekyll from fully installing. After Google searching, I was able to find some forums that ran into the same problem.&lt;/p&gt;

&lt;p&gt;&lt;a class="underline" href="https://github.com/rdoc/rdoc/issues/175"&gt;Parsing problem #175&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I kept running into this error message in terminal:&lt;/p&gt;

&lt;script src="https://gist.github.com/CassieShumway/d1473c5c88308ede9d03.js"&gt;&lt;/script&gt;

&lt;p&gt;I wasn't sure what was going on, but from reading the forums, it sounded like there was a problem with the pry gem. So in order to fix this, I had to type this command in my terminal:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;gem install rdoc&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Afterwards, I tried downloading the Jekyll gem again, and it went through! Now, onward for more victories!&lt;/p&gt;

&lt;hr class="divider-short" /&gt;

&lt;h3&gt;Running Jekyll&lt;/h3&gt;

&lt;p&gt;Now that we've defeated the first problem, it should be noted that to run Jekyll on your local host, it requires different commands.&lt;/p&gt;

&lt;script src="https://gist.github.com/CassieShumway/41479d944137aaf2e68c.js"&gt;&lt;/script&gt;

&lt;p&gt;For my terminal, however, the following command was needed:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;jekyll serve --baseurl -w&lt;/code&gt;&lt;/p&gt;

&lt;hr class="divider-short" /&gt;

&lt;h3&gt;_config.yml&lt;/h3&gt;

&lt;p&gt;This config file helps keep our repository crisp and clean. So we'll need to edit our &lt;code&gt;_config&lt;/code&gt; file to ensure Jekyll links all of our pages properly.&lt;/p&gt; 

&lt;p&gt;Note: Make sure that your base url matches that of your github repository&lt;/p&gt;

&lt;script src="https://gist.github.com/CassieShumway/da93552cf1331c79cfe1.js"&gt;&lt;/script&gt;

&lt;hr class="divider-short" /&gt;

&lt;h3&gt;Your .gitignore&lt;/h3&gt;

&lt;p&gt;Let's not forget about that &lt;code&gt;.gitignore&lt;/code&gt; file. Very similar to Middleman, all we need to do is add one line of code for the &lt;code&gt;_site&lt;/code&gt; that Jekyll uses.&lt;/p&gt;

&lt;script src="https://gist.github.com/CassieShumway/9c675c0604b43e6aedc3.js"&gt;&lt;/script&gt;

&lt;hr class="divider-short" /&gt;

&lt;h3&gt;Where to work&lt;/h3&gt;

&lt;p&gt;Speaking of the sites folder....I made a special note to myself: Never &lt;em&gt;ever&lt;/em&gt; work in your &lt;code&gt;_site&lt;/code&gt; folder!&lt;/p&gt;

&lt;p&gt;Jekyll explains below:&lt;/p&gt;

&lt;div class="box text-left"&gt;
	&lt;p&gt;Destination folders are cleaned on site builds. The contents of &lt;code&gt;destination&lt;/code&gt; are automatically cleaned when the site is built. Files or folders that are not created by your site will be removed. Do not use an important location for &lt;code&gt;destination&lt;/code&gt;; instead, use it as a staging area and copy files from there to your web server.&lt;/p&gt;
&lt;/div&gt;

&lt;hr class="divider-short" /&gt;

&lt;h3&gt;What If You Already git pushed?&lt;/h3&gt;

&lt;p&gt;So, what happens if you accidentally git pushed files that you didnt' mean to? Such as accidentally working within Jekyll's &lt;code&gt;_sites&lt;/code&gt; folder....?&lt;/p&gt;

&lt;p&gt;Well, let's remember that you can't remove files on Github without unstaging them first. So let's be sure to write the following command in terminal to remove them:&lt;/p&gt;

&lt;p&gt;You can type the following command: &lt;code&gt;git rm unwanted-file-name-here&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;But if that won't do the trick, then you can force remove them with the following command: &lt;code&gt;git rm -f unwanted-file-name-here&lt;/code&gt;&lt;/p&gt;


&lt;/p&gt;&lt;/article&gt;
</content>
  </entry>
  <entry>
    <title>Git Reminders</title>
    <link rel="alternate" href="http://blog.url.com/2014/06/14/gitreminders.html"/>
    <id>http://blog.url.com/2014/06/14/gitreminders.html</id>
    <published>2014-06-14T05:00:00Z</published>
    <updated>2014-06-24T17:36:53-05:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;article&gt;

&lt;h1&gt;Git Reminders&lt;/h1&gt;

&lt;p&gt;In the beginning of the apprenticeship, we wanted to instill good practices. For example, the importance of indenting a line and properly nesting. In this instance, there are a few more practices we should always keep in mind in terms of our Github processes!&lt;/p&gt; 

&lt;hr class="divider-short" /&gt;

&lt;h3&gt;.gitignore&lt;/h3&gt;

&lt;p&gt;There are many files that might show up in your repository. But there are some files that you don't want to show....so we want to make sure that we properly hide them! Adding and using the gitignore will help us keep junk files out of our pretty repository.&lt;/p&gt;

&lt;p&gt;Simply add the following to your .gitignore:&lt;/p&gt;

&lt;script src="https://gist.github.com/CassieShumway/d610ee3d70029286086a.js"&gt;&lt;/script&gt;

&lt;hr class="divider-short" /&gt;

&lt;h3&gt;Making/Editing your .gitignore&lt;/h3&gt;

&lt;p&gt;If you already have some files in your repository that you need getting rid of, follow these steps:&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;touch .gitignore&lt;/li&gt;
	&lt;li&gt;add the code above into your .gitignore file&lt;/li&gt;
	&lt;li&gt;rm .DS_Store (and/or any other junk files)&lt;/li&gt;
	&lt;li&gt;push your files back up to github for completed edits&lt;/li&gt;
&lt;/ol&gt;

&lt;hr class="divider-short" /&gt;

&lt;h3&gt;Make A Repository for each project&lt;/h3&gt;

&lt;p&gt;It's been a while since I've worked in Github since Middleman makes it all too easy. So making a new repository was good review. In order to create a new repository for each project page, this is what I did:&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;Navigate through your terminal&lt;/li&gt;
	&lt;li&gt;Go to the folder you wish to create a new repository for&lt;/li&gt;
	&lt;li&gt;Type git init&lt;/li&gt;
	&lt;li&gt;Add all your files&lt;/li&gt;
	&lt;li&gt;git commit -m "type message here"&lt;/li&gt;
	&lt;li&gt;git remote add origin git@github.com:CassieShumway/test.git&lt;/li&gt;
	&lt;li&gt;git push -u origin master&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now you've just made a new repository from your existing folder. Easy!&lt;/p&gt;

&lt;p&gt;I'm sure I'll come across many more Git practices that are essential to good practices, but for now, this is a good start when creating new projects!&lt;/p&gt;

&lt;/article&gt;

</content>
  </entry>
  <entry>
    <title>Simplicity</title>
    <link rel="alternate" href="http://blog.url.com/2014/06/09/simplicity.html"/>
    <id>http://blog.url.com/2014/06/09/simplicity.html</id>
    <published>2014-06-09T05:00:00Z</published>
    <updated>2014-06-24T17:36:53-05:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;article&gt;

&lt;h1&gt;Simplicity&lt;/h1&gt;

&lt;p&gt;You know that phrase, “Less is more?” Well in terms of design, simplicity can be a beautiful thing. Comparable to wireframes, the layout needs to be successful without relying on color or images. So by keeping your design simple, you have the purity of layout, usability, and navigation. Resulting in no distractions and no unnecessary accents. Therefore, every element you place on the page has reason and functionality.

&lt;hr class="divider-short" /&gt;
&lt;blockquote&gt;“Simple always wins.”&lt;/blockquote&gt;
&lt;blockquote&gt;—Adam Kaplan&lt;/blockquote&gt;
&lt;hr class="divider-short" /&gt;

&lt;h3&gt;Starting Off&lt;/h3&gt;

&lt;p&gt;For this project, I was given an assignment with the topic of Chicago Doughnuts. As a requirement, the user must have the ability to view menus from several Chicago based doughnut stores. The requirements for the project required clear heirarchy, clean layout, and custom illustrations and/or icons.&lt;/p&gt;

&lt;hr class="divider" /&gt;

&lt;h3&gt;The Deliverables&lt;/h3&gt;
&lt;ul class="margin-bottom"&gt;
	&lt;li class="bold-text"&gt;Wireframes/Mockups&lt;/li&gt;
	&lt;li&gt;- Layout&lt;/li&gt;
	&lt;li&gt;- Typography&lt;/li&gt;
	&lt;li&gt;- Colors&lt;/li&gt;
	&lt;li&gt;- Branding&lt;/li&gt;
&lt;/ul&gt;

&lt;ul class="margin-bottom"&gt;
	&lt;li class="bold-text"&gt;Website (1 page)&lt;/li&gt;
	&lt;li&gt;- Create a separate Github repository https://pages.github.com/&lt;/li&gt;
	&lt;li&gt;- Semantic HTML5/CSS3 using best practices&lt;/li&gt;
	&lt;li&gt;- Add responsive mobile breakpoints&lt;/li&gt;
&lt;/ul&gt;

&lt;ul class="margin-bottom"&gt;
	&lt;li class="bold-text"&gt;Presentation&lt;/li&gt;
	&lt;li&gt;- PDF of wireframes/mockups&lt;/li&gt;
	&lt;li&gt;- Show off website&lt;/li&gt;
&lt;/ul&gt;

&lt;hr class="divider" /&gt;

&lt;h3&gt;The Wireframe&lt;/h3&gt;
&lt;div class="box"&gt;
	&lt;img class="image" src="/images/doughnut-draft-1.jpg" /&gt;
&lt;/div&gt;

&lt;h3&gt;The Mock-Up&lt;/h3&gt;
&lt;div class="box"&gt;
	&lt;img class="image" src="/images/doughnut-draft-2.jpg" /&gt;
&lt;/div&gt;

&lt;hr class="divider" /&gt;

&lt;h3&gt;Keeping It In Check&lt;/h3&gt;
&lt;p&gt;By looking at the wireframe and the mock-up...you can already see some big differences between them. You should know that this is a &lt;em&gt;bad thing&lt;/em&gt; unless it was approved by your client!&lt;/p&gt; 

&lt;p class="bold-text"&gt;Never change a design last minute or without permission from the client.&lt;/p&gt;

&lt;p&gt;It's good to know that you don't want to waste your client's time or mislead them. There are important notes to remember when you present a wireframe and it gets approved. First off, &lt;em&gt;that&lt;/em&gt; is the design that was accepted and agreed upon. Second, the client most likely will become attached to the original wireframe and will be unsettled seeing another concept out of the blue. Lastly, you don't want to waste the clients time or money going rogue.

&lt;hr class="divider" /&gt;

&lt;h3&gt;Defend Yourself&lt;/h3&gt;

&lt;p&gt;There will be plenty of situations where a client might fight you on your decisions. Pick your battles carefully but also know how to defend your design.&lt;/p&gt;

&lt;p&gt;Here are some scenarios: 
	&lt;ol class="margin-bottom"&gt;
		&lt;li&gt;A client might not know why certain elements are in the layout.&lt;/li&gt;
		&lt;li&gt;A client might not understand the best use for navigation flow.&lt;/li&gt;
		&lt;li&gt;A client might just have really bad taste.&lt;/li&gt;
	&lt;/ol&gt;
&lt;p&gt;With all of this said, it's your job to be able to help guide the client in the right direction and defend your position.&lt;/p&gt;

&lt;p&gt;It was interesting to hear Mike Jansen ask questions regarding my design choice. All valid questions which I should always be able to explain. Questions such as “Why had I used that particular shape?” “Why had I used that font?” “What was the reasoning behind my color scheme?” Always be prepared to any any and all questions your client might have about &lt;em&gt;every&lt;/em&gt; design decision.&lt;/p&gt;

&lt;h3&gt;Review Your Design &amp;amp; Code&lt;/h3&gt;

&lt;p&gt;Before presenting any project to a client, take the time to step back. Take a breather, walk around, or sleep on it. Everything looks different when you allow yourself a break from staring at something for 12 hours straight.&lt;/p&gt;

&lt;p&gt;Come back to your computer screen with fresh eyes and review your design and code. It's easy to miss small mistakes, overlook extra spacing....and to pile on unneccesary elements when you're a zombie. Take a break! Allow yourself to see things as they are, make good decisions, and keep things simple!&lt;/p&gt;

&lt;h3&gt;Final Project&lt;/h3&gt;

&lt;a href="http://cassieshumway.github.io/project-doughnut/"&gt;&lt;p&gt;See the final design layout here&lt;/p&gt;&lt;/a&gt;



&lt;/p&gt;&lt;/p&gt;&lt;/p&gt;&lt;/article&gt;
</content>
  </entry>
  <entry>
    <title>Habits</title>
    <link rel="alternate" href="http://blog.url.com/2014/05/29/habits.html"/>
    <id>http://blog.url.com/2014/05/29/habits.html</id>
    <published>2014-05-29T05:00:00Z</published>
    <updated>2014-06-24T17:36:53-05:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;article&gt;

&lt;h1&gt;Habits&lt;/h1&gt;

&lt;h2&gt;Project Footprints: Design Process&lt;/h2&gt;

&lt;p&gt;For the past few weeks I've been working on mock-ups for different projects. When starting out a design process, its important to sketch out your ideas, make mock-ups, and to &lt;em&gt;keep all your drafts&lt;/em&gt;. The reason I emphasis that last point is because you want to see your design process evolve. To see the changes you made in order to problem solve and to keep ideas you might want to revisit later.&lt;/p&gt;

&lt;h3&gt;Presenting to a Client&lt;/h3&gt;

&lt;h4&gt;Applicant Page&lt;/h4&gt;

&lt;p&gt;I presented this mock-up page to Ryan Verner for the applicant profile page. It had some interactive elements to it and I needed a clean and clear way of presenting those elements. In order to do this, you can create static pages that highlight each action you want to depict. In addition to presentation, gray out the rest of the page so the client can focus on what you want.&lt;/p&gt;

&lt;div class="box"&gt;
	&lt;p&gt;Figure 1. Mock-up of overall page layout&lt;/p&gt;
	&lt;img class="image" src="/images/habits1.jpg" /&gt;
&lt;/div&gt;

&lt;div class="box"&gt;
	&lt;p&gt;Figure 2. Highlight interactive elements&lt;/p&gt;
	&lt;img class="image" src="/images/habits2.jpg" /&gt;
&lt;/div&gt;

&lt;div class="box"&gt;
	&lt;p&gt;Figure 3. Highlight interactive elements&lt;/p&gt;
	&lt;img class="image" src="/images/habits3.jpg" /&gt;
&lt;/div&gt;

&lt;h3&gt;Watch how Things Evolve&lt;/h3&gt;

&lt;h4&gt;Craftsmen Page&lt;/h4&gt;

&lt;p&gt;This was my original mock-up for the craftsmen page. After presenting this to Ryan and Mike, elements were changed, replaced, and deleted. This is where you see designs evolve to better fit the client and usability.&lt;/p&gt;

&lt;div class="box"&gt;
	&lt;p&gt;Figure 1. Mock-up of overall page layout&lt;/p&gt;
	&lt;img class="image" src="/images/habits6.jpg" /&gt;
&lt;/div&gt;

&lt;div class="box"&gt;
	&lt;p&gt;Figure 2. Mock-up of “No Apprentice” Page&lt;/p&gt;
	&lt;img class="image" src="/images/habits7.jpg" /&gt;
&lt;/div&gt;

&lt;div class="box"&gt;
	&lt;p&gt;Figure 3. Highlight interactive elements on page&lt;/p&gt;
	&lt;img class="image" src="/images/habits8.jpg" /&gt;
&lt;/div&gt;

&lt;h4&gt; Craftsmen Page Edited&lt;/h4&gt;

&lt;p&gt;I had a meeting with Ryan to present the original mock-up and he added and removed elements. Ryan knew which elements would be automated, which were unnecessary, and what options would be needed. Therefore, the craftsmen page evolved to the one below:&lt;/p&gt;

&lt;div class="box"&gt;
	&lt;img class="image" src="/images/habits9.jpg" /&gt;
&lt;/div&gt;	

&lt;p&gt;With these changes, we had a meeting between Mike Jansen, Ryan Verner, and myself. After presenting the mock-ups to Mike, he ultimately had something else in mind. Mike was more interested in seeing the numbers for the craftsmen laid out. He wanted visual representation in a table and a graph. So now the design process evolves again.&lt;/p&gt;

&lt;h3&gt;Keep Your Drafts&lt;/h3&gt;

&lt;h4&gt;Projection Page&lt;/h4&gt;

&lt;p&gt;I presented this mock-up to Mike Jansen to see if this were the right direction for the page. While it was on the right track, he was interested in seeing another option with a cleaner table (see figure 2).&lt;/p&gt;

&lt;div class="box"&gt;
	&lt;p&gt;Figure 1. Mock-up of table layout&lt;/p&gt;
	&lt;img class="image" src="/images/habits4.jpg" /&gt;
&lt;/div&gt;

&lt;div class="box"&gt;
	&lt;p&gt;Figure 2. Bare table for a cleaner table layout&lt;/p&gt;
	&lt;img class="image" src="/images/habits5.jpg" /&gt;
&lt;/div&gt;


&lt;/article&gt;

</content>
  </entry>
  <entry>
    <title>Inputs</title>
    <link rel="alternate" href="http://blog.url.com/2014/05/21/inputs.html"/>
    <id>http://blog.url.com/2014/05/21/inputs.html</id>
    <published>2014-05-21T05:00:00Z</published>
    <updated>2014-06-24T17:36:53-05:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;article&gt;

&lt;h1&gt;Inputs&lt;/h1&gt;

&lt;code&gt;input&lt;/code&gt; 

&lt;p&gt;The input tag is used for an area where you want a user to type in specific data. Typically, these are used within a form element. These input tags can then be used in a variety of ways such as logins, passwords, and checkboxes.&lt;/p&gt;

&lt;code&gt;form&lt;/code&gt;

&lt;p&gt;The form element is associated with the input element. Typically paired together, the input element can be a descendant of a form element. However, if an attribute is not specified, then a label element must be a descendant of a form element.  &lt;/p&gt;

&lt;code&gt;label&lt;/code&gt;

&lt;p&gt;The label element serves as a caption for an item. It can be associated with a control by: (a) placing the control element inside the label element or (b) by using the for attribute. Be sure to nest within your label elements!&lt;/p&gt;

&lt;hr class="divider" /&gt;

&lt;h3&gt;Different Type Attributes&lt;/h3&gt;

&lt;h4&gt;1. Text Fields&lt;/h4&gt;

&lt;p&gt;Text fields can be presented in a variety of ways and styles. Most commonly, you'll see forms presented with text that can be arranged around the input area.&lt;/p&gt;

&lt;script src="https://gist.github.com/CassieShumway/01335bd883af275c2933.js"&gt;&lt;/script&gt;

&lt;div class="box grey cf"&gt;
	&lt;form&gt;
		&lt;div class="row"&gt;
			&lt;div class="column fourth"&gt;
				&lt;label&gt;First name:&lt;/label&gt;
			&lt;/div&gt;
		&lt;div class="column full"&gt;
			&lt;input type="text" name="firstname" /&gt;
		&lt;/div&gt;
		&lt;/div&gt;
		&lt;div class="row"&gt;
			&lt;div class="column fourth"&gt;
				&lt;label&gt;Last name:&lt;/label&gt;
			&lt;/div&gt;
			&lt;div class="column full"&gt;
				&lt;input type="text" name="lastname" /&gt;
			&lt;/div&gt;
		&lt;/div&gt;
	&lt;/form&gt;
&lt;/div&gt;

&lt;hr class="divider" /&gt;

&lt;h4&gt;2. Placeholder Text&lt;/h4&gt;

&lt;p&gt;To go for a cleaner design, you can use placeholder text as a nice way to help guide users. You can input different text so users know what information is needed. However, you should note that this type attribute can only be text, search, tel, url, or email. Otherwise, it will be ignored!&lt;/p&gt; 

&lt;script src="https://gist.github.com/CassieShumway/6464d4bfe18e818853e7.js"&gt;&lt;/script&gt;

&lt;div class="box grey cf"&gt;
	&lt;form&gt;
		&lt;div class="input-column"&gt;
			&lt;input type="text" name="firstname" placeholder="First name" /&gt;
		&lt;/div&gt;
		&lt;div class="input-column"&gt;
			&lt;input type="text" name="lastname" placeholder="Last name" /&gt;
		&lt;/div&gt;
	&lt;/form&gt;
&lt;/div&gt;

&lt;hr class="divider" /&gt;

&lt;h4&gt;3. Textarea&lt;/h4&gt;

&lt;p&gt;Sometimes you will see a text area element included with your input elements. Text areas can be styled in your CSS file and don't require much markup.&lt;/p&gt;

&lt;script src="https://gist.github.com/CassieShumway/73bf10bd1fb6838a1d3c.js"&gt;&lt;/script&gt;

&lt;div class="box grey cf"&gt;
	&lt;form&gt;
		&lt;div class="row"&gt;
		&lt;div class="column fourth"&gt;
			&lt;label&gt;First name:&lt;/label&gt;
		&lt;/div&gt;
		&lt;div class="column full"&gt;
			&lt;input type="text" name="firstname" /&gt;
		&lt;/div&gt;
	&lt;/div&gt;
	&lt;div class="row"&gt;
		&lt;div class="column fourth"&gt;
			&lt;label&gt;Last name:&lt;/label&gt;
		&lt;/div&gt;
		&lt;div class="column full"&gt;
			&lt;input type="text" name="lastname" /&gt;
		&lt;/div&gt;
	&lt;/div&gt;
	&lt;div class="row"&gt;
		&lt;label&gt;Tell us about your project?&lt;/label&gt;
		&lt;textarea&gt;&lt;/textarea&gt;
	&lt;/div&gt;
	&lt;/form&gt;
&lt;/div&gt;

&lt;hr class="divider" /&gt;

&lt;h4&gt;4. Passwords&lt;/h4&gt;

&lt;script src="https://gist.github.com/CassieShumway/09d920cf57f8f60857eb.js"&gt;&lt;/script&gt;

&lt;div class="box grey"&gt;
	&lt;form action=""&gt;
		&lt;div class="half-margin-bottom"&gt;
	    &lt;label&gt;Username:&lt;/label&gt;
	    &lt;input type="text" class="input" /&gt;
	  &lt;/div&gt;
	  &lt;div class="half-margin-bottom"&gt;
	    &lt;label&gt;Password:&lt;/label&gt;
	    &lt;input type="password" class="input" /&gt;
	  &lt;/div&gt;
	    &lt;input type="submit" value="Submit" class="submit-button" /&gt;
	&lt;/form&gt;
&lt;/div&gt;

&lt;hr class="divider" /&gt;

&lt;h4&gt;5. Validation Error&lt;/h4&gt;

&lt;p&gt;Validation errors are essential when helping to guide users with inputs. There are browser extensions —like Firefox— that allows you to display custom error messages when an input field doesn't successfully validate.&lt;/p&gt;

&lt;script src="https://gist.github.com/CassieShumway/9661ab43f46dc1002aeb.js"&gt;&lt;/script&gt;

&lt;p&gt;But if you want to stick to inputs, simply specify and class your validation error like so:&lt;/p&gt;

&lt;script src="https://gist.github.com/CassieShumway/82ce627b34a05fba632e.js"&gt;&lt;/script&gt;

&lt;div class="box grey"&gt;
	&lt;form action=""&gt;
		&lt;div class="half-margin-bottom"&gt;
	    &lt;label&gt;Validation Error&lt;/label&gt;
	    &lt;input type="text" class="validation-error" /&gt;
	  &lt;/div&gt;
	&lt;/form&gt;
&lt;/div&gt;

&lt;hr class="divider" /&gt;

&lt;h4&gt;6. Checkboxes&lt;/h4&gt;

&lt;p&gt;A useful tip when using checkboxes is to always wrap your input text with a label. This way, users aren't limited to clicking a tiny checkbox but can click the whole text to make it easier to select items.&lt;/p&gt;

&lt;script src="https://gist.github.com/CassieShumway/13ec3c0e05d1193ff0a2.js"&gt;&lt;/script&gt;

&lt;div class="box grey"&gt;
	&lt;form action=""&gt;
		&lt;label&gt;
			&lt;input type="checkbox" name="vehicle" value="Bike" class="input-width" /&gt;
			I have a bike
		&lt;/label&gt;
		&lt;label&gt;
			&lt;input type="checkbox" name="vehicle" value="Car" class="input-width" /&gt;
			I have a car 
		&lt;/label&gt;
	&lt;/form&gt;
&lt;/div&gt;

&lt;hr class="divider" /&gt;

&lt;h4&gt;7. Radio Buttons&lt;/h4&gt;

&lt;p&gt;Radio buttons are similar to checkboxes except users will not be able to choose more than one item. Once again, we want to wrap our input fields with a label element so we can easily click each item.&lt;/p&gt;

&lt;script src="https://gist.github.com/CassieShumway/f54a87c225b7236ed44b.js"&gt;&lt;/script&gt;

&lt;div class="box grey"&gt;
	&lt;form&gt;
		&lt;label&gt;
			&lt;input type="radio" name="sex" value="male" class="input-width" /&gt;Male
		&lt;/label&gt;
		&lt;label&gt;
			&lt;input type="radio" name="sex" value="female" class="input-width" /&gt;Female
		&lt;/label&gt;
	&lt;/form&gt;
&lt;/div&gt;


&lt;hr class="divider" /&gt;

&lt;h4&gt;8. Focus&lt;/h4&gt;

&lt;script src="https://gist.github.com/CassieShumway/1f2a16b156de11dae2ac.js"&gt;&lt;/script&gt;

&lt;p&gt;Adding the pseudo class &lt;code&gt;:focus&lt;/code&gt; helps reassure users that they are in the correct input field. By applying similar styling you're able make them responsive. Apply this to all of your input fields and you're good to go!&lt;/p&gt;

&lt;script src="https://gist.github.com/CassieShumway/3e850be55b2d207b0d87.js"&gt;&lt;/script&gt;

&lt;h4&gt;9. Buttons&lt;/h4&gt;

&lt;p&gt;You can use an input type attribute as a button or submit button.&lt;/p&gt;

&lt;script src="https://gist.github.com/CassieShumway/72ecbabb42bf69ef107c.js"&gt;&lt;/script&gt;

&lt;p&gt;If you want to safe guard yourself, be sure to select the input type attribute as well as the class that you made for it in your CSS file.&lt;/p&gt;

&lt;script src="https://gist.github.com/CassieShumway/88ae211021cf9e103f9c.js"&gt;&lt;/script&gt;

&lt;div class="box grey"&gt;
	&lt;form&gt;
 		&lt;input type="submit" value="Submit" class="submit-button input-full-width" /&gt;
	&lt;/form&gt;
&lt;/div&gt;

&lt;hr class="divider" /&gt;

&lt;h3&gt;Sources&lt;/h3&gt;
&lt;ul&gt;
	&lt;a href="http://cssbutton.com/forms/"&gt;&lt;li&gt;Input Boxes and Submit Buttons&lt;/li&gt;&lt;/a&gt;
	&lt;a href="http://www.w3schools.com/html/html_forms.asp"&gt;&lt;li&gt;W3Schools HTML Forms and Input&lt;/li&gt;&lt;/a&gt;
	&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Input"&gt;&lt;li&gt;input&lt;/li&gt;&lt;/a&gt;
&lt;/ul&gt;

&lt;/article&gt;

</content>
  </entry>
  <entry>
    <title>Planning</title>
    <link rel="alternate" href="http://blog.url.com/2014/05/15/planning.html"/>
    <id>http://blog.url.com/2014/05/15/planning.html</id>
    <published>2014-05-15T05:00:00Z</published>
    <updated>2014-06-24T17:36:53-05:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;article&gt;

&lt;h1&gt;Planning&lt;/h1&gt;

&lt;p&gt;Whoa! This week went by fast but I feel back on track. Even though last week was rough, I made it a point to start off this week with a positive attitude. I even wore orange lipstick. After my reflection this past weekend I wanted to reinforce —within myself— that these challenges were meant to make me better. Rough patches aren't for nothing! We should learn from them and become better.&lt;/p&gt;

&lt;p&gt;With that said, my design groove was back to normal and Adam asked, “What had been different this week compared to last?” This question helped me to pin point the things I needed in order to perform better.&lt;/p&gt;

&lt;hr class="divider-short" /&gt;

&lt;h3&gt;Expection&lt;/h3&gt;

&lt;p&gt;I know this sounds silly, but if I see what's expected of me, then I perform better. What I mean by this, is knowing what design direction is wanted. Similar to working with a new client, unless you know what they're looking for, you will continually be shooting in the dark. However, after speaking with the client and getting some design direction, &lt;em&gt;then&lt;/em&gt; you can make progress.&lt;/p&gt;

&lt;h3&gt;Planning&lt;/h3&gt;

&lt;p&gt;The next step of course is basic planning. Knowing what designs you'd like to explore. Start off with some rough sketches and start planning. I've found that my designs are always more successful this way. Also, asking for constant feedback is great because I'm able to refine my designs under the right direction or be steered if I'm going the wrong way. &lt;/p&gt;

&lt;h3&gt;Details&lt;/h3&gt;

&lt;p&gt;From the start of my apprenticeship, I've always needed a detailed list of what was required. I've found that it &lt;em&gt;really&lt;/em&gt; helps me to see everything I need to do. Then mark them off one by one to make sure I'm meeting all the requirements. A great new tool that helped with this is Artisan. I really liked using Artisan this week because I could see all the projects I'm working on and could therefore prioritize my time better.&lt;/p&gt;

&lt;hr class="divider-short" /&gt;

&lt;h3&gt;So, How'd You Do?&lt;/h3&gt;

&lt;p&gt;Well, with all of that said, how was my work this week compared to last? Well, it was definitely more prepared! And it was definitely more thought out.&lt;/p&gt;

&lt;h4&gt;1. Take Notes&lt;/h4&gt;

&lt;p class="left-text"&gt;I like to take notes whenever talking with Adam, the design team, or other 8th Lighters. It helps me get started and know what I need to do.&lt;/p&gt;

&lt;div class="box"&gt;
	&lt;img class="image" src="/images/plan-sketch.jpg" /&gt;
&lt;/div&gt;

&lt;h4&gt;2. Draw Sketches&lt;/h4&gt;

&lt;div class="box"&gt;
	&lt;img class="image" src="/images/planning-sketch.jpg" /&gt;
&lt;/div&gt;

&lt;h4&gt;3. Create Mock-ups&lt;/h4&gt;

&lt;div class="box"&gt;
	&lt;img class="image" src="/images/may16-one.jpg" /&gt;
	&lt;p&gt;Mock-up #1&lt;/p&gt;
&lt;/div&gt;

&lt;div class="box"&gt;
	&lt;img class="image" src="/images/may16-two.jpg" /&gt;
	&lt;p&gt;Mock-up #2&lt;/p&gt;
&lt;/div&gt;


&lt;div class="box"&gt;
	&lt;img class="image" src="/images/may16-three.jpg" /&gt;
	&lt;p&gt;Mock-up #3&lt;/p&gt;
&lt;/div&gt;

&lt;h4&gt;4. Discuss&lt;/h4&gt;

&lt;p&gt;Keep an open discussion with your mentor and/or client and you'll always be on track!&lt;/p&gt;

&lt;/article&gt;

</content>
  </entry>
</feed>
